{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layouts.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/lib/api.js","components/hooks/use-http.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","navData","isActive","active","Layouts","props","main","children","QuoteItem","item","text","author","id","QuoteList","navigate","useNavigate","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","push","list","map","quote","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","setIsEntering","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","params","useParams","loadedComments","onAddedCommentHandler","HighlightedQuote","QuoteDetail","match","App","path","render","element","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.e300512f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n        <div className={classes.logo}>Great Quotes</div>\n        <nav className={classes.nav}>\n            <ul>\n                <li><NavLink to=\"/quotes\" className={(navData)=> navData.isActive ? classes.active : ''}>All Quotes</NavLink></li>\n                <li><NavLink to=\"/new-quote\" className={(navData)=> navData.isActive ? classes.active : ''}>Add a Quote</NavLink></li>\n            </ul>\n        </nav>\n    </header>\n  )\n}\n\nexport default MainNavigation","import React, { Fragment } from 'react'\nimport MainNavigation from './MainNavigation'\nimport classes from './Layout.module.css';\n\n\nconst Layouts = (props) => {\n  return (\n    <Fragment>\n        <MainNavigation />\n        <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  )\n}\n\nexport default Layouts","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useNavigate, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  // const match = useRouteMatch();\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  console.log(location);\n  const changeSortingHandler = ()=>{\n    // history.push(\"/quotes?sort=\"+ (isSortingAscending ? 'desc' : 'asc'));\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n    // much cleaner approach, pathname to pathname key and query parameter to search key \n    // history.push({\n    //   pathname : location.pathname,\n    //   search : `?sort=${(isSortingAscending ? 'desc' : 'asc')}`,\n    // })\n    navigate({\n      pathname : location.pathname,\n      search : `?sort=${(isSortingAscending ? 'desc' : 'asc')}`,\n    }, {push: true})\n  }\n  return (\n    <Fragment>\n    <div className={classes.sorting}>\n      <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      {/* NOTE: whatever written in double quotes will be treated as html inner html */}\n    </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","const FIREBASE_DOMAIN = 'https://react-router-803aa-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\n// for specific quote number of quotes are saved for that specific quote\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react'\nimport QuoteList from \"../components/quotes/QuoteList\"\nimport { getAllQuotes } from '../components/lib/api';\nimport useHttp from '../components/hooks/use-http';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nconst DUMMY_QUOTES = [\n  { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\n  { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\n];\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error} = useHttp(\n    getAllQuotes, true\n  )\n  useEffect(()=>{\n    sendRequest();\n  }, [sendRequest])\n  if(status === 'pending'){\n    return <div>\n      <LoadingSpinner/>\n    </div>\n  }\n  if(error){\n    <p className='centered focused'>{error}</p>\n  }\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length===0)){\n    return <NoQuotesFound />\n  }\n  return (\n    // <QuoteList quotes={DUMMY_QUOTES} />\n    <QuoteList quotes={loadedQuotes} />\n  )\n}\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    // setIsEntering(false);\n    // can't add here coz it will be too late\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishEntering =()=>{\n    setIsEntering(false);\n  }\n  const formFocusHandler = ()=>{\n    setIsEntering(true)\n  }\n\n  return (\n    <Fragment>\n    {/* <Prompt when={isEntering}  message={(location)=> \"Are you sure you want to leave !!!\"}/> */}\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEntering} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react'\nimport QuoteForm from \"../components/quotes/QuoteForm\"\nimport { useHistory, useNavigate } from 'react-router-dom'\nimport useHttp from \"../components/hooks/use-http\";\nimport { addQuote } from \"../components/lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote)\n  // const history = useHistory()\n  const navigate = useNavigate()\n  console.log(status)\n  console.log(navigate);\n\n  useEffect(()=>{\n    if(status === \"completed\"){\n      // history.push(\"/quotes\")\n      navigate(\"/quotes\", {push: true})\n    }\n  }, [status, navigate]);\n  const addQuoteHandler = (quoteData)=>{\n    // console.log(quoteData)\n    sendRequest(quoteData)\n    // history.push(\"/quotes\")\n\n  }\n  return (\n    <QuoteForm isLoading = {status==='pending'} onAddQuote={addQuoteHandler} />\n  )\n}\n\nexport default NewQuote","import { useEffect, useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error} = useHttp(addComment)\n  const { onAddedComment } = props;\n  useEffect(()=>{\n    if(status === 'pending' && !error){\n      onAddedComment();\n    }\n  },[status, onAddedComment, error])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    const enteredText = commentTextRef.current.value\n    // send comment to server\n    sendRequest({commentData : {text : enteredText}, quoteId: props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n    { status === \"pending\" && <div className=\"centered\"> <LoadingSpinner/> </div> }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n  // useCallback() coz this function is passes as props and that props is used as depenecy in useEffect which will leads this fucntion to create again and again\n  const onAddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        {\" \"}\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0)){\n    comments = <CommentsList comments={loadedComments} />\n  }\n  if(status === 'completed' && (!loadedComments && loadedComments.length === 0)){\n    comments = <p className=\"centered\">No comments added yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={onAddedCommentHandler}\n        />\n      )}\n      {/* <p>Comments...</p> */}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from \"react\";\nimport {\n  Link,\n  Outlet,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\n];\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  // const match = useRouteMatch();\n  const match = useLocation();\n  console.log(match);\n  // pathname (useLocation)  path(useRouteMatch)\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  // const quote = DUMMY_QUOTES.find((quote)=> quote.id === params.quoteId)\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    <p className=\"centered focused\">{error}</p>;\n  }\n  if (!loadedQuote.text) {\n    return <p>No quote Found !</p>;\n  }\n  // if(!quote){\n  //   return <p>No quote Found !</p>\n  // }\n  return (\n    <Fragment>\n      {/* <h1>QuoteDetail</h1>\n        <p>{params.quoteId}</p> */}\n      {/* nested Routting  */}\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}/`} exact> */}\n\n      <Link className=\"btn--flat\" to=\"comments\">\n          Load Comments\n        </Link>\n\n        <Outlet />\n      {/* <Routes>\n        <Route path=\"comments\" element={<Comments />} />\n      </Routes> */}\n      \n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","// import { Navigate, Route, Routes, Switch } from \"react-router-dom\"\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport React from \"react\";\n// import { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Layouts from \"./components/layout/Layouts\";\nimport AllQuotes from \"./Pages/AllQuotes\";\nimport NewQuote from \"./Pages/NewQuote\";\nimport QuoteDetail from \"./Pages/QuoteDetail\";\nimport Comments from \"./components/comments/Comments\";\n\nfunction App() {\n  return (\n    <Layouts>\n    <Routes>\n    <Route path=\"/\" render={() => <Navigate to=\"/quotes\" />} />\n      <Route path=\"/quotes\" element={<AllQuotes/>} />\n      <Route path=\"/quotes/:quoteId/*\" element={ <QuoteDetail/>} >\n        <Route path=\"comments\" element={<Comments />} />\n      </Route>\n      <Route path=\"/new-quote\"  element={<NewQuote/>} />\n    </Routes>\n    </Layouts>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}