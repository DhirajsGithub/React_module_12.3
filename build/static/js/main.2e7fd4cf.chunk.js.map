{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","components/hooks/use-http.js","components/lib/api.js","components/comments/NewCommentForm.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/Layout.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layouts.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","onAddedCommentHandler","length","onClick","MainNavigation","header","logo","nav","to","navData","isActive","active","Layouts","main","children","NewQuote","React","lazy","QuoteDetail","AllQuotes","App","fallback","path","render","element","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.2e7fd4cf.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-router-803aa-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\n// for specific quote number of quotes are saved for that specific quote\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","import { useEffect, useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error} = useHttp(addComment)\n  const { onAddedComment } = props;\n  useEffect(()=>{\n    if(status === 'pending' && !error){\n      onAddedComment();\n    }\n  },[status, onAddedComment, error])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    const enteredText = commentTextRef.current.value\n    // send comment to server\n    sendRequest({commentData : {text : enteredText}, quoteId: props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n    { status === \"pending\" && <div className=\"centered\"> <LoadingSpinner/> </div> }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n  // useCallback() coz this function is passes as props and that props is used as depenecy in useEffect which will leads this fucntion to create again and again\n  const onAddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        {\" \"}\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0)){\n    comments = <CommentsList comments={loadedComments} />\n  }\n  if(status === 'completed' && (!loadedComments && loadedComments.length === 0)){\n    comments = <p className=\"centered\">No comments added yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={onAddedCommentHandler}\n        />\n      )}\n      {/* <p>Comments...</p> */}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n        <div className={classes.logo}>Great Quotes</div>\n        <nav className={classes.nav}>\n            <ul>\n                <li><NavLink to=\"/quotes\" className={(navData)=> navData.isActive ? classes.active : ''}>All Quotes</NavLink></li>\n                <li><NavLink to=\"/new-quote\" className={(navData)=> navData.isActive ? classes.active : ''}>Add a Quote</NavLink></li>\n            </ul>\n        </nav>\n    </header>\n  )\n}\n\nexport default MainNavigation","import React, { Fragment } from 'react'\nimport MainNavigation from './MainNavigation'\nimport classes from './Layout.module.css';\n\n\nconst Layouts = (props) => {\n  return (\n    <Fragment>\n        <MainNavigation />\n        <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  )\n}\n\nexport default Layouts","// import { Navigate, Route, Routes, Switch } from \"react-router-dom\"\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport React, {Suspense} from \"react\";\n// import { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Layouts from \"./components/layout/Layouts\";\n// import AllQuotes from \"./Pages/AllQuotes\";\n// import NewQuote from \"./Pages/NewQuote\";\n// import QuoteDetail from \"./Pages/QuoteDetail\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n// adding lazy loading\nconst NewQuote = React.lazy(()=>import(\"./Pages/NewQuote\"));\n// downloading this code when needed, the download will take compule of milli seconds hence need to wrap out components with suspense component\nconst QuoteDetail = React.lazy(()=> import(\"./Pages/QuoteDetail\"));\nconst AllQuotes = React.lazy(()=> import(\"./Pages/AllQuotes\"));\n\nfunction App() {\n  return (\n    <Layouts>\n    <Suspense fallback={ <div className=\"centered\"><LoadingSpinner/></div> }>\n    <Routes>\n    <Route path=\"/\" render={() => <Navigate to=\"/quotes\" />} />\n      <Route path=\"/quotes\" element={<AllQuotes/>} />\n      <Route path=\"/quotes/:quoteId/*\" element={ <QuoteDetail/>} >\n        <Route path=\"comments\" element={<Comments />} />\n      </Route>\n      <Route path=\"/new-quote\"  element={<NewQuote/>} />\n    </Routes>\n    </Suspense>\n    </Layouts>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}