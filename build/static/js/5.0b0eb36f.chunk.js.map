{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","params","useParams","match","useLocation","console","log","quoteId","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","to"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,gGCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBCyEVC,UA1DK,WAClB,IAAMC,EAASC,cAETC,EAAQC,cACdC,QAAQC,IAAIH,GAGZ,IAAQI,EAAYN,EAAZM,QAER,EAKIC,YAAQC,KAAgB,GAJ1BC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KAHF,EAIEC,MAQF,OAJAC,qBAAU,WACRL,EAAYH,KACX,CAACG,EAAaH,IAEF,YAAXI,EAEA,8BACE,cAACK,EAAA,EAAD,MAODJ,EAAYd,KAOf,eAAC,WAAD,WAIE,cAAC,EAAD,CAAkBA,KAAMc,EAAYd,KAAMC,OAAQa,EAAYb,SAG9D,cAAC,IAAD,CAAMJ,UAAU,YAAYsB,GAAG,WAA/B,2BAIE,cAAC,IAAD,OAjBG","file":"static/js/5.0b0eb36f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from \"react\";\nimport {\n  Link,\n  Outlet,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\n];\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  // const match = useRouteMatch();\n  const match = useLocation();\n  console.log(match);\n  // pathname (useLocation)  path(useRouteMatch)\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  // const quote = DUMMY_QUOTES.find((quote)=> quote.id === params.quoteId)\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    <p className=\"centered focused\">{error}</p>;\n  }\n  if (!loadedQuote.text) {\n    return <p>No quote Found !</p>;\n  }\n  // if(!quote){\n  //   return <p>No quote Found !</p>\n  // }\n  return (\n    <Fragment>\n      {/* <h1>QuoteDetail</h1>\n        <p>{params.quoteId}</p> */}\n      {/* nested Routting  */}\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}/`} exact> */}\n\n      <Link className=\"btn--flat\" to=\"comments\">\n          Load Comments\n        </Link>\n\n        <Outlet />\n      {/* <Routes>\n        <Route path=\"comments\" element={<Comments />} />\n      </Routes> */}\n      \n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}