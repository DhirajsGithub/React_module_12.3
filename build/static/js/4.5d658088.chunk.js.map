{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","setIsEntering","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","console","log","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCyD/BC,EArDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAmBC,GAAnB,WAsBA,OACE,cAAC,WAAD,UAEA,cAAC,EAAD,UACE,uBAAMC,QARe,WACvBD,GAAc,IAOqBT,UAAWC,IAAQU,KAAMC,SAxB9D,SAA2BC,GACzBA,EAAMC,iBAKN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAa9C,UACGnB,EAAMuB,WACL,qBAAKtB,UAAWC,IAAQsB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKxB,UAAWC,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAEtC,sBAAKL,UAAWC,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEpC,qBAAKP,UAAWC,IAAQ8B,QAAxB,SACE,wBAAQC,QA3BM,WACpBvB,GAAc,IA0ByBT,UAAU,MAA3C,iC,uBCtBKiC,UAxBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,EAAWC,cACjBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GAEZI,qBAAU,WACM,cAAXL,GAEDC,EAAS,UAAW,CAACK,MAAM,MAE5B,CAACN,EAAQC,IAOZ,OACE,cAAC,EAAD,CAAWhB,UAAsB,YAATe,EAAoBlB,WAPtB,SAACyB,GAEvBR,EAAYQ","file":"static/js/4.5d658088.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    // setIsEntering(false);\n    // can't add here coz it will be too late\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishEntering =()=>{\n    setIsEntering(false);\n  }\n  const formFocusHandler = ()=>{\n    setIsEntering(true)\n  }\n\n  return (\n    <Fragment>\n    {/* <Prompt when={isEntering}  message={(location)=> \"Are you sure you want to leave !!!\"}/> */}\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEntering} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react'\nimport QuoteForm from \"../components/quotes/QuoteForm\"\nimport { useHistory, useNavigate } from 'react-router-dom'\nimport useHttp from \"../components/hooks/use-http\";\nimport { addQuote } from \"../components/lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote)\n  // const history = useHistory()\n  const navigate = useNavigate()\n  console.log(status)\n  console.log(navigate);\n\n  useEffect(()=>{\n    if(status === \"completed\"){\n      // history.push(\"/quotes\")\n      navigate(\"/quotes\", {push: true})\n    }\n  }, [status, navigate]);\n  const addQuoteHandler = (quoteData)=>{\n    // console.log(quoteData)\n    sendRequest(quoteData)\n    // history.push(\"/quotes\")\n\n  }\n  return (\n    <QuoteForm isLoading = {status==='pending'} onAddQuote={addQuoteHandler} />\n  )\n}\n\nexport default NewQuote"],"sourceRoot":""}